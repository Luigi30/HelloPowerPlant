#ifndef GAMEWORLD_H#define GAMEWORLD_H#include "Messages.h"class Shape3D;//Singleton GameWorld that holds our global variables.class GameWorld : public LBroadcaster {	std::vector<Shape3D *> shapeList;	Orientation _viewOrientation;		static GameWorld *s_Instance;	GameWorld() {}		public:	inline std::vector<Shape3D *> *GetShapeListPtr() { return &shapeList; }	inline Orientation *GetViewOrientationPtr() { return &_viewOrientation; }	void AddShape(Shape3D *shape){		GetShapeListPtr()->push_back(shape);		BroadcastMessage(MSG_SHAPE_LIST_CHANGED, NULL);	}	static GameWorld *Instance() {		if(!s_Instance)			s_Instance = new GameWorld;		return s_Instance;	}};#endif