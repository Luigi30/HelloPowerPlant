#ifndef RENDER_H#define RENDER_H#include ":3D:3DTypes.h"#include "PixMapDrawing.h"#include "GameWorld.h"#include "MathHelper.h"class QDPane;class Renderer {	private:	PixMapDrawing drawHelper;		public:	Renderer(LGWorld *world) {		drawHelper = PixMapDrawing();		drawHelper.SetPixMapHandle(::GetGWorldPixMap(world->GetMacGWorld()));		drawHelper.CreateZBuffer();	}		void DrawTriangle(Orientation orientation, Triangle triangle);	inline PixMapDrawing * GetDrawHelperPtr() { return &drawHelper; }};std::vector<Point3D> SortByY(std::vector<Point3D> list);#endif